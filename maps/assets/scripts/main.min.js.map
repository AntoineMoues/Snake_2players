{"version":3,"sources":["js/main.js"],"names":["game","snake","cross","id","color","this","size","x","Math","floor","random","window","innerWidth","y","innerHeight","posX","posY","backgroundColor","speed","direction","div","Array","show","i","length","remove","document","createElement","style","left","top","width","height","querySelector","appendChild","update","_this","setInterval","nextX","nextY","eating","eat","splice","fruit","eaten","push","shock","move","addEventListener","e","keyCode","lose","snakes","j","location","reload","food","position","zqsd","arrows"],"mappings":"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","file":"../../../assets/scripts/main.min.js","sourcesContent":["function game() {\n    var snake = function(cross, id, color) {\n\n        // Pixel size, size of grid case\n        this.size = 15;\n\n        // ID which allow us to differenciate me from others\n        this.id = id;\n\n\n        // Use to create a non-real grid\n        this.x = Math.floor(Math.random() * ((window.innerWidth - 270) / this.size)) * this.size + 135;\n        this.y = Math.floor(Math.random() * ((window.innerHeight - 270) / this.size)) * this.size + 135;\n\n        // Arrays which contains snake positions\n        this.posX = [this.x,this.x-15,this.x-30];\n        this.posY = [this.y,this.y-15,this.y-30];\n\n\n        this.backgroundColor = color;\n\n        // Controls cross\n        this.cross = cross;\n\n        // A pos will gain his own size to grow\n        this.speed = this.size;\n\n        // At start, the snake will go to his right\n        this.direction = 'right';\n\n        this.div = new Array();\n\n        this.show = function() {\n            for (var i = 0; i < this.posX.length; i++) {\n                if (this.div[i]) {\n                    this.div[i].remove();\n                }\n                this.div[i] = document.createElement('div');\n                this.div[i].style.left = this.posX[i] + 'px';\n                this.div[i].style.top = this.posY[i] + 'px';\n                this.div[i].style.width = this.size + 'px';\n                this.div[i].style.height = this.size + 'px';\n                this.div[i].style.backgroundColor = this.backgroundColor;\n                document.querySelector('.snake-container').appendChild(this.div[i]);\n            }\n        }\n\n        this.update = function() {\n            var _this = this;\n            window.setInterval(function() {\n                var nextX = _this.posX[_this.posX.length - 1];\n                var nextY = _this.posY[_this.posY.length - 1];\n                if (_this.direction === 'up') {\n                    nextY -= _this.speed;\n                } else if (_this.direction === 'right') {\n                    nextX += _this.speed;\n                } else if (_this.direction === 'left') {\n                    nextX -= _this.speed;\n                } else if (_this.direction === 'down') {\n                    nextY += _this.speed;\n                }\n                var eating = _this.eat(nextX, nextY);\n                if (eating === false) {\n                    _this.posX.splice(0, 1);\n                    _this.posY.splice(0, 1);\n                } else if (eating === true) {\n                    fruit.eaten();\n                }\n                _this.posX.push(nextX);\n                _this.posY.push(nextY);\n                _this.show();\n                _this.shock();\n            }, 100);\n        }\n\n        this.move = function() {\n            var _this = this;\n            window.addEventListener('keypress', function(e) {\n                if (e.keyCode === _this.cross[0]) {\n                    _this.direction = 'up';\n                } else if (e.keyCode === _this.cross[1]) {\n                    _this.direction = 'right';\n                } else if (e.keyCode === _this.cross[2]) {\n                    _this.direction = 'left';\n                } else if (e.keyCode === _this.cross[3]) {\n                    _this.direction = 'down';\n                }\n            }, false);\n\n            this.shock = function() {\n                for (var i = 0; i < this.posX.length - 1; i++) {\n                    if (this.posX.length - 1 > 0) {\n                        if (this.posX[this.posX.length - 1] === this.posX[i] && this.posY[this.posY.length - 1] === this.posY[i]) {\n                            this.lose();\n                        }\n                    }\n                }\n                if (this.posX[this.posX.length - 1] > window.innerWidth || this.posY[this.posY.length - 1] > window.innerHeight ||  this.posX[this.posX.length - 1] < 0 ||  this.posY[this.posY.length - 1] < 0) {\n                    this.lose();\n                }\n                for (var i = 0; i < snakes.length; i++) {\n                    if (this.id !== i) {\n                        for (var j = 0; j < snakes[i].posX.length; j++) {\n                            if (this.posX[this.posX.length - 1] === snakes[i].posX[j] && this.posY[this.posY.length - 1] === snakes[i].posY[j]) {\n                                this.lose();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        this.eat = function(x, y) {\n            if (x === fruit.x && y === fruit.y) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        this.lose = function() {\n            this.id++;\n            // window.alert('Perdu, le joueur ' + this.id + ' avait un score de ' + this.posX.length);\n            window.location.reload();\n        }\n\n        this.update();\n        this.move();\n    }\n\n    var food = function() {\n        this.size = 15;\n\n        this.x = Math.floor(Math.random() * (window.innerWidth / this.size)) * this.size;\n        this.y = Math.floor(Math.random() * (window.innerHeight / this.size)) * this.size;\n\n        this.backgroundColor = 'yellow';\n\n        this.div;\n\n        this.show = function() {\n            this.div = document.createElement('div');\n            this.div.style.left = this.x + 'px';\n            this.div.style.top = this.y + 'px';\n            this.div.style.backgroundColor = this.backgroundColor;\n            this.div.style.width = this.size + 'px';\n            this.div.style.height = this.size + 'px';\n            this.div.style.position = 'relative';\n            document.querySelector('.snake-container').appendChild(this.div);\n        }\n\n        this.eaten = function() {\n\n            this.div.remove();\n\n            this.x = Math.floor(Math.random() * (window.innerWidth / this.size)) * this.size;\n            this.y = Math.floor(Math.random() * (window.innerHeight / this.size)) * this.size;\n\n            this.show();\n        }\n\n        this.show();\n    }\n\n    var zqsd = [122, 100, 113, 115];\n    var arrows = [105, 108, 106, 107];\n    var fruit = new food();\n    var snakes = new Array;\n    snakes.length = 1;\n    snakes[0] = new snake(zqsd, 0,'blue');\n    snakes[1] = new snake(arrows, 1, 'red');\n}\ngame();\n"]}